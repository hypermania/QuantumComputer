#States:{
INIT = Int(10,0);
}

#Operators:{
U = MultModN(3,5,3);
}

#SpectralDecoms:{
}

#Commands:{
InitializeTo: INIT;

Apply: BitwiseHadamard(10,1);
Apply: BitwiseHadamard(10,2);
Apply: BitwiseHadamard(10,3);
Apply: BitwiseHadamard(10,4);
Apply: BitwiseHadamard(10,5);
Apply: BitwiseHadamard(10,6);
Apply: BitwiseHadamard(10,7);

ApplyCtrl: 10,7,8,U;

ApplyCtrl: 10,6,8,U;
ApplyCtrl: 10,6,8,U;

ApplyCtrl: 10,5,8,U;
ApplyCtrl: 10,5,8,U;
ApplyCtrl: 10,5,8,U;
ApplyCtrl: 10,5,8,U;

ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;
ApplyCtrl: 10,4,8,U;

ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;
ApplyCtrl: 10,3,8,U;

ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;
ApplyCtrl: 10,2,8,U;

ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;
ApplyCtrl: 10,1,8,U;

Apply: InverseQFT(10,1,7);
SpectMeasure: CompBasis(10,1,7);
}
